version: '3.8'

services:
  # سرویس‌های زیرساختی
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - '2181:2181'

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - '9092:9092'
      - '29092:29092'

  # دیتابیس نمونه PostgreSQL
  postgres:
    image: postgres:14
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: maazz
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data

  mongo:
    image: mongo:6
    ports:
      - '27017:27017'
    volumes:
      - mongodata:/data/db

  # سرویس‌های داخلی
  parser:
    build: ./services/parser
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - kafka
    ports:
      - '8001:8000'

  features:
    build: ./services/features
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - kafka
    ports:
      - '8002:8000'

  ml_serving:
    build: ./services/ml_serving
    environment:
      - MODEL_PATH=${MODEL_PATH:-models/iforest_model.pkl}
    volumes:
      - ./models:/models
    ports:
      - '8003:8000'

  alerts:
    build: ./services/alerts
    environment:
      - ALERT_EMAIL=${ALERT_EMAIL}
    ports:
      - '8004:8000'

  summarizer:
    build: ./services/summarizer
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    ports:
      - '8005:8000'

volumes:
  pgdata:
  mongodata: